<?php

/**
 * @file
 * Install, update and uninstall functions for the IP address blocking module.
 */

/**
 * Implements hook_schema().
 */
function ip_blocking_schema() {
  $schema = array();
  
  $schema['blocked_ips'] = array(
    'description' => 'Stores blocked IP addresses.',
    'fields' => array(
      'iid' => array(
        'description' => 'Primary Key: unique ID for IP addresses.',
        'type' => 'serial',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
      'ip' => array(
        'description' => 'IP address',
        'type' => 'varchar',
        'length' => 40,
        'not null' => TRUE,
        'default' => '',
      ),
      'reason' => array(
        'description' => 'Reason of blocking.',
        'type' => 'varchar',
        'length' => '255',
        'not null' => FALSE,
      ),
      'uid' => array(
        'description' => 'User identifier.',
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0,
      ),
      'time' => array(
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
        'description' => 'Unix timestamp of when IP blocked.',
      ),
    ),
    'indexes' => array(
      'ip' => array('ip'),
    ),
    'primary key' => array('iid'),
  );
  
  return $schema;
}
 
/**
 *  Add new fields to database.
 */
function ip_blocking_update_1000() {
  $fields = array(
    'reason' => array(
      'description' => 'Reason of blocking.',
      'type' => 'varchar',
      'length' => '255',
      'not null' => FALSE,
    ),
    'uid' => array(
      'description' => 'User identifier.',
      'type' => 'int',
      'unsigned' => TRUE,
      'not null' => TRUE,
      'default' => 0,
    ),
    'time' => array(
      'type' => 'int',
      'not null' => TRUE,
      'default' => 0,
      'description' => 'Unix timestamp of when IP blocked.',
    ),
  );
  
  foreach($fields as $field_name => $schema) {
    if (!db_field_exists('blocked_ips', $field_name)) {
      db_add_field('blocked_ips', $field_name, $schema);
    }
  }
}

/**
 *  Add and init new variable.
 */
function ip_blocking_update_1001() {
  $config = config('ip_blocking.settings');
  $config->set('return_404', 0);
  $config->save();  
}